name: tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python_version: [
            3.7,
            3.8,
            3.9,
            pypy3
        ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
#     From https://github.com/python-poetry/poetry/actions
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")
        echo ::set-output name=versionshort::$(python -c "import sys; print(''.join(str(v) for v in sys.version_info[:2]))")
    - name: Install and set up Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        source $HOME/.poetry/env
        poetry config virtualenvs.in-project true
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install
    - name: yapf linting
      run: |
        source .venv/bin/activate
        yapf -r -vv --diff -p routingpy tests
    - name: nosetests
      run: |
        source .venv/bin/activate
        nosetests -v --with-coverage --cover-package=routingpy
    - name: coveralls
      run: |
        source .venv/bin/activate
        coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}